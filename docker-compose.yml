#  services:
#    postgres:
#      container_name: ms_pg_sql
#      image: postgres
#      environment:
#        POSTGRES_USER: alibou
#        POSTGRES_PASSWORD: alibou
#        PGDATA: /var/lib/postgresql/data
#      volumes:
#        - postgres:/var/lib/postgresql/data
#      ports:
#        - 5432:5432
#      networks:
#        - microservices-net
#      restart: unless-stopped

#services:
#  postgres:
#    container_name: ms_pg_sql
#    image: postgres
#    environment:
#      POSTGRES_USER: alibou
#      POSTGRES_PASSWORD: alibou
#      POSTGRES_DB: product  # ðŸ‘ˆ ADD THIS LINE
#      PGDATA: /var/lib/postgresql/data
#    volumes:
#      - postgres:/var/lib/postgresql/data
#    ports:
#      - 5432:5432
#    networks:
#      - microservices-net
#    restart: unless-stopped
#
##pgadmin is for those that are not using ultimate intellij
#    pgadmin:
#      container_name: ms_pgadmin
#      image: dpage/pgadmin4
#      environment:
#        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
#        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#        PGADMIN_CONFIG_SERVER_MODE: 'False'
#      volumes:
#        - pgadmin:/var/lib/pgadmin
#      ports:
#        - 5050:80
#      networks:
#        - microservices-net
#      restart: unless-stopped
#
#    mongodb:
#      container_name: ms_mongo_db
#      image: mongo
#      ports:
#        - 27017:27017
#      volumes:
#        - mongo:/data
#      environment:
#        MONGO_INITDB_ROOT_USERNAME: alibou
#        MONGO_INITDB_ROOT_PASSWORD: alibou
#
#
#    #mongo-express:
#    #  container_name: ms_mongo_express
#    #  image: mongo-express
#     # restart: unless-stopped
#     # ports:
#     #   - 8081:8081
#     # environment:
#      #  ME_CONFIG_MONGODB_ADMINUSERNAME: alibou
#      #  ME_CONFIG_MONGODB_ADMINPASSWORD: alibou
#      #  ME_CONFIG_MONGODB_SERVER: mongodb
#    ms_mongo_express:
#      container_name: ms_mongo_express
#      image: mongo-express
#      restart: unless-stopped
#      environment:
#        - ME_CONFIG_MONGODB_SERVER=ms_mongo_db
#        - ME_CONFIG_MONGODB_ADMINUSERNAME=alibou
#        - ME_CONFIG_MONGODB_ADMINPASSWORD=alibou
#        - ME_CONFIG_BASICAUTH_USERNAME=admin
#        - ME_CONFIG_BASICAUTH_PASSWORD=pass
#      ports:
#        - 8081:8081
#
#
#    mail-dev:
#      container_name: ms_mail_dev
#      image: maildev/maildev
#      ports:
#        - 1080:1080 #U.I
#        - 1025:1025 #SERVICES
#
#
#
#  networks:
#    microservices-net:
#      driver: bridge
#
#
#  volumes:
#    postgres:
#    pgadmin:
#    mongo:

version: "3.8"

services:
  mysql:
    container_name: ms_mysql
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: Ikiseh@1
      MYSQL_DATABASE: ecommerce
    ports:
      - 3307:3306
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - microservices-net
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: ms_kafka
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ms_kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - microservices-net



  mail-dev:
    container_name: ms_mail_dev
    image: maildev/maildev
    ports:
      - 1080:1080  # Web UI
      - 1025:1025  # SMTP server
    networks:
      - microservices-net
    restart: unless-stopped

networks:
  microservices-net:
    driver: bridge

volumes:
  mysql_data:
  kafka_data:
